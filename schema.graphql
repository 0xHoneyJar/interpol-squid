type Vault @entity {
  id: ID!
  owner: String! @index
  timestamp: DateTime!
  address: String!
}

type LPToken @entity {
  id: ID!
  address: String!
  name: String
  symbol: String
}

type VaultDeposit @entity {
  id: ID!
  vaultAddress: String! @index
  tokenAddress: String!
  amount: BigInt!
  timestamp: DateTime!
  lockExpiration: DateTime
  transactionHash: String!
}

type VaultWithdrawal @entity {
  id: ID!
  vaultAddress: String! @index
  tokenAddress: String!
  amount: BigInt!
  timestamp: DateTime!
  transactionHash: String!
}

type VaultTotalDeposit @entity {
  id: ID!
  vaultAddress: String! @index
  tokenAddress: String!
  amount: BigInt!
  lockExpiration: DateTime
}

type VaultStake @entity {
  id: ID!
  vaultAddress: String! @index
  tokenAddress: String!
  stakingContract: String! @index
  amount: BigInt!
  timestamp: DateTime!
  transactionHash: String!
}

type VaultUnstake @entity {
  id: ID!
  vaultAddress: String! @index
  tokenAddress: String!
  stakingContract: String! @index
  amount: BigInt!
  timestamp: DateTime!
  transactionHash: String!
}

type VaultTotalStake @entity {
  id: ID!
  vaultAddress: String! @index
  tokenAddress: String!
  stakingContract: String! @index
  amount: BigInt!
}

type BGTBoost @entity {
  id: ID!
  vaultAddress: String! @index
  validator: String! @index
  amount: BigInt!
  status: String! # "Queued" or "Activated"
  timestamp: DateTime!
}

type KodiakStake @entity {
  id: ID!
  vaultAddress: String! @index
  amount: BigInt!
  lockDuration: Int!
  kekId: String! @index
  timestamp: DateTime!
}
